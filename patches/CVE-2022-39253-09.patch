Origin: https://github.com/git/git/commit/0d3beb71dad7906f576b0de9cea32164549163fe
Reviewed-by: Sylvain Beucler <beuc@debian.org>
Last-Update: 2022-12-12

From 0d3beb71dad7906f576b0de9cea32164549163fe Mon Sep 17 00:00:00 2001
From: Taylor Blau <me@ttaylorr.com>
Date: Fri, 29 Jul 2022 15:21:40 -0400
Subject: [PATCH] t/t7NNN: allow local submodules

To prepare for the default value of `protocol.file.allow` to change to
"user", ensure tests that rely on local submodules can initialize them
over the file protocol.

Tests that only need to interact with submodules in a limited capacity
have individual Git commands annotated with the appropriate
configuration via `-c`. Tests that interact with submodules a handful of
times use `test_config_global` instead. Test scripts that rely on
submodules throughout use a `git config --global` during a setup test
towards the beginning of the script.

Signed-off-by: Taylor Blau <me@ttaylorr.com>
---
 t/t7001-mv.sh                           | 2 ++
 t/t7064-wtstatus-pv2.sh                 | 1 +
 t/t7300-clean.sh                        | 1 +
 t/t7400-submodule-basic.sh              | 4 ++++
 t/t7403-submodule-sync.sh               | 2 ++
 t/t7406-submodule-update.sh             | 1 +
 t/t7407-submodule-foreach.sh            | 1 +
 t/t7408-submodule-reference.sh          | 4 ++++
 t/t7409-submodule-detached-work-tree.sh | 4 ++++
 t/t7411-submodule-config.sh             | 3 +++
 t/t7413-submodule-is-active.sh          | 1 +
 t/t7414-submodule-mistakes.sh           | 3 ++-
 t/t7415-submodule-names.sh              | 4 ++++
 t/t7416-submodule-dash-url.sh           | 4 ++++
 t/t7417-submodule-path-url.sh           | 4 ++++
 t/t7418-submodule-sparse-gitmodules.sh  | 4 ++++
 t/t7419-submodule-set-branch.sh         | 4 ++++
 t/t7420-submodule-set-url.sh            | 4 ++++
 t/t7421-submodule-summary-add.sh        | 4 ++++
 t/t7506-status-submodule.sh             | 2 ++
 t/t7507-commit-verbose.sh               | 1 +
 t/t7800-difftool.sh                     | 1 +
 t/t7814-grep-recurse-submodules.sh      | 4 ++++
 23 files changed, 62 insertions(+), 1 deletion(-)

Index: git-2.20.1/t/t7001-mv.sh
===================================================================
--- git-2.20.1.orig/t/t7001-mv.sh
+++ git-2.20.1/t/t7001-mv.sh
@@ -290,6 +290,7 @@ test_expect_success SYMLINKS 'check move
 rm -f moved symlink
 
 test_expect_success 'setup submodule' '
+	test_config_global protocol.file.allow always &&
 	git commit -m initial &&
 	git reset --hard &&
 	git submodule add ./. sub &&
@@ -496,6 +497,7 @@ test_expect_success 'moving a submodule
 '
 
 test_expect_success 'moving nested submodules' '
+	test_config_global protocol.file.allow always &&
 	git commit -am "cleanup commit" &&
 	mkdir sub_nested_nested &&
 	(cd sub_nested_nested &&
Index: git-2.20.1/t/t7064-wtstatus-pv2.sh
===================================================================
--- git-2.20.1.orig/t/t7064-wtstatus-pv2.sh
+++ git-2.20.1/t/t7064-wtstatus-pv2.sh
@@ -453,6 +453,7 @@ test_expect_success 'create and add subm
 	git checkout master &&
 	git clone . sub_repo &&
 	git clone . super_repo &&
+	test_config_global protocol.file.allow always &&
 	(	cd super_repo &&
 		git submodule add ../sub_repo sub1 &&
 
Index: git-2.20.1/t/t7300-clean.sh
===================================================================
--- git-2.20.1.orig/t/t7300-clean.sh
+++ git-2.20.1/t/t7300-clean.sh
@@ -478,6 +478,7 @@ test_expect_success 'should not clean su
 		git init &&
 		test_commit msg hello.world
 	) &&
+	test_config_global protocol.file.allow always &&
 	git submodule add ./repo/.git sub1 &&
 	git commit -m "sub1" &&
 	git branch before_sub2 &&
Index: git-2.20.1/t/t7400-submodule-basic.sh
===================================================================
--- git-2.20.1.orig/t/t7400-submodule-basic.sh
+++ git-2.20.1/t/t7400-submodule-basic.sh
@@ -11,6 +11,10 @@ subcommands of git submodule.
 
 . ./test-lib.sh
 
+test_expect_success 'setup - enable local submodules' '
+	git config --global protocol.file.allow always
+'
+
 test_expect_success 'submodule deinit works on empty repository' '
 	git submodule deinit --all
 '
Index: git-2.20.1/t/t7403-submodule-sync.sh
===================================================================
--- git-2.20.1.orig/t/t7403-submodule-sync.sh
+++ git-2.20.1/t/t7403-submodule-sync.sh
@@ -11,6 +11,8 @@ These tests exercise the "git submodule
 . ./test-lib.sh
 
 test_expect_success setup '
+	git config --global protocol.file.allow always &&
+
 	echo file >file &&
 	git add file &&
 	test_tick &&
Index: git-2.20.1/t/t7406-submodule-update.sh
===================================================================
--- git-2.20.1.orig/t/t7406-submodule-update.sh
+++ git-2.20.1/t/t7406-submodule-update.sh
@@ -22,6 +22,7 @@ compare_head()
 
 
 test_expect_success 'setup a submodule tree' '
+	git config --global protocol.file.allow always &&
 	echo file > file &&
 	git add file &&
 	test_tick &&
Index: git-2.20.1/t/t7407-submodule-foreach.sh
===================================================================
--- git-2.20.1.orig/t/t7407-submodule-foreach.sh
+++ git-2.20.1/t/t7407-submodule-foreach.sh
@@ -13,6 +13,7 @@ that are currently checked out.
 
 
 test_expect_success 'setup a submodule tree' '
+	git config --global protocol.file.allow always &&
 	echo file > file &&
 	git add file &&
 	test_tick &&
Index: git-2.20.1/t/t7408-submodule-reference.sh
===================================================================
--- git-2.20.1.orig/t/t7408-submodule-reference.sh
+++ git-2.20.1/t/t7408-submodule-reference.sh
@@ -17,6 +17,10 @@ test_alternate_is_used () {
 	test_cmp expect actual
 }
 
+test_expect_success 'setup' '
+	git config --global protocol.file.allow always
+'
+
 test_expect_success 'preparing first repository' '
 	test_create_repo A &&
 	(
Index: git-2.20.1/t/t7409-submodule-detached-work-tree.sh
===================================================================
--- git-2.20.1.orig/t/t7409-submodule-detached-work-tree.sh
+++ git-2.20.1/t/t7409-submodule-detached-work-tree.sh
@@ -12,6 +12,10 @@ on detached working trees
 TEST_NO_CREATE_REPO=1
 . ./test-lib.sh
 
+test_expect_success 'setup' '
+	git config --global protocol.file.allow always
+'
+
 test_expect_success 'submodule on detached working tree' '
 	git init --bare remote &&
 	test_create_repo bundle1 &&
Index: git-2.20.1/t/t7411-submodule-config.sh
===================================================================
--- git-2.20.1.orig/t/t7411-submodule-config.sh
+++ git-2.20.1/t/t7411-submodule-config.sh
@@ -12,6 +12,9 @@ from the database and from the worktree
 TEST_NO_CREATE_REPO=1
 . ./test-lib.sh
 
+test_expect_success 'setup' '
+	git config --global protocol.file.allow always
+'
 test_expect_success 'submodule config cache setup' '
 	mkdir submodule &&
 	(cd submodule &&
Index: git-2.20.1/t/t7413-submodule-is-active.sh
===================================================================
--- git-2.20.1.orig/t/t7413-submodule-is-active.sh
+++ git-2.20.1/t/t7413-submodule-is-active.sh
@@ -9,6 +9,7 @@ submodules which are "active" and intere
 . ./test-lib.sh
 
 test_expect_success 'setup' '
+	git config --global protocol.file.allow always &&
 	git init sub &&
 	test_commit -C sub initial &&
 	git init super &&
Index: git-2.20.1/t/t7414-submodule-mistakes.sh
===================================================================
--- git-2.20.1.orig/t/t7414-submodule-mistakes.sh
+++ git-2.20.1/t/t7414-submodule-mistakes.sh
@@ -30,7 +30,8 @@ test_expect_success 'no warning when upd
 
 test_expect_success 'submodule add does not warn' '
 	test_when_finished "git rm -rf submodule .gitmodules" &&
-	git submodule add ./embed submodule 2>stderr &&
+	git -c protocol.file.allow=always \
+		submodule add ./embed submodule 2>stderr &&
 	test_i18ngrep ! warning stderr
 '
 
Index: git-2.20.1/t/t7415-submodule-names.sh
===================================================================
--- git-2.20.1.orig/t/t7415-submodule-names.sh
+++ git-2.20.1/t/t7415-submodule-names.sh
@@ -8,6 +8,10 @@ real-world setup that confirms we catch
 . ./test-lib.sh
 . "$TEST_DIRECTORY"/lib-pack.sh
 
+test_expect_success 'setup' '
+	git config --global protocol.file.allow always
+'
+
 test_expect_success 'check names' '
 	cat >expect <<-\EOF &&
 	valid
Index: git-2.20.1/t/t7416-submodule-dash-url.sh
===================================================================
--- git-2.20.1.orig/t/t7416-submodule-dash-url.sh
+++ git-2.20.1/t/t7416-submodule-dash-url.sh
@@ -3,6 +3,10 @@
 test_description='check handling of disallowed .gitmodule urls'
 . ./test-lib.sh
 
+test_expect_success 'setup' '
+	git config --global protocol.file.allow always
+'
+
 test_expect_success 'create submodule with protected dash in url' '
 	git init upstream &&
 	git -C upstream commit --allow-empty -m base &&
Index: git-2.20.1/t/t7417-submodule-path-url.sh
===================================================================
--- git-2.20.1.orig/t/t7417-submodule-path-url.sh
+++ git-2.20.1/t/t7417-submodule-path-url.sh
@@ -3,6 +3,10 @@
 test_description='check handling of .gitmodule path with dash'
 . ./test-lib.sh
 
+test_expect_success 'setup' '
+	git config --global protocol.file.allow always
+'
+
 test_expect_success 'create submodule with dash in path' '
 	git init upstream &&
 	git -C upstream commit --allow-empty -m base &&
Index: git-2.20.1/t/t7418-submodule-sparse-gitmodules.sh
===================================================================
--- git-2.20.1.orig/t/t7418-submodule-sparse-gitmodules.sh
+++ git-2.20.1/t/t7418-submodule-sparse-gitmodules.sh
@@ -14,6 +14,10 @@ also by committing .gitmodules and then
 
 . ./test-lib.sh
 
+test_expect_success 'setup' '
+	git config --global protocol.file.allow always
+'
+
 test_expect_success 'sparse checkout setup which hides .gitmodules' '
 	git init upstream &&
 	git init submodule &&
Index: git-2.20.1/t/t7506-status-submodule.sh
===================================================================
--- git-2.20.1.orig/t/t7506-status-submodule.sh
+++ git-2.20.1/t/t7506-status-submodule.sh
@@ -247,6 +247,7 @@ test_expect_success 'status with merge c
 	test_create_repo_with_commit sub1 &&
 	test_tick &&
 	test_create_repo_with_commit sub2 &&
+	test_config_global protocol.file.allow always &&
 	(
 		cd super &&
 		prev=$(git rev-parse HEAD) &&
@@ -322,6 +323,7 @@ test_expect_success 'diff --submodule wi
 # sub2 will have an untracked file
 # sub3 will have an untracked repository
 test_expect_success 'setup superproject with untracked file in nested submodule' '
+	test_config_global protocol.file.allow always &&
 	(
 		cd super &&
 		git clean -dfx &&
Index: git-2.20.1/t/t7507-commit-verbose.sh
===================================================================
--- git-2.20.1.orig/t/t7507-commit-verbose.sh
+++ git-2.20.1/t/t7507-commit-verbose.sh
@@ -74,6 +74,7 @@ test_expect_success 'diff in message is
 
 test_expect_success 'submodule log is stripped out too with -v' '
 	git config diff.submodule log &&
+	test_config_global protocol.file.allow always &&
 	git submodule add ./. sub &&
 	git commit -m "sub added" &&
 	(
Index: git-2.20.1/t/t7800-difftool.sh
===================================================================
--- git-2.20.1.orig/t/t7800-difftool.sh
+++ git-2.20.1/t/t7800-difftool.sh
@@ -611,6 +611,7 @@ test_expect_success 'difftool --no-symli
 
 test_expect_success 'difftool properly honors gitlink and core.worktree' '
 	test_when_finished rm -rf submod/ule &&
+	test_config_global protocol.file.allow always &&
 	git submodule add ./. submod/ule &&
 	test_config -C submod/ule diff.tool checktrees &&
 	test_config -C submod/ule difftool.checktrees.cmd '\''
Index: git-2.20.1/t/t7814-grep-recurse-submodules.sh
===================================================================
--- git-2.20.1.orig/t/t7814-grep-recurse-submodules.sh
+++ git-2.20.1/t/t7814-grep-recurse-submodules.sh
@@ -186,6 +186,7 @@ test_expect_success !MINGW 'grep recurse
 	git -C "su:b" add "fi:le" &&
 	git -C "su:b" commit -m "add fi:le" &&
 
+	test_config_global protocol.file.allow always &&
 	git -C parent submodule add "../su:b" "su:b" &&
 	git -C parent commit -m "add submodule" &&
 
@@ -217,6 +218,7 @@ test_expect_success 'grep history with m
 	git -C sub add file &&
 	git -C sub commit -m "add file" &&
 
+	test_config_global protocol.file.allow always &&
 	git -C parent submodule add ../sub dir/sub &&
 	git -C parent commit -m "add submodule" &&
 
@@ -258,6 +260,7 @@ test_expect_success 'grep using relative
 	mkdir parent/src &&
 	echo "(1|2)d(3|4)" >parent/src/file2 &&
 	git -C parent add src/file2 &&
+	test_config_global protocol.file.allow always &&
 	git -C parent submodule add ../sub &&
 	git -C parent commit -m "add files and submodule" &&
 
@@ -298,6 +301,7 @@ test_expect_success 'grep from a subdir'
 	mkdir parent/src &&
 	echo "(1|2)d(3|4)" >parent/src/file &&
 	git -C parent add src/file &&
+	test_config_global protocol.file.allow always &&
 	git -C parent submodule add ../sub src/sub &&
 	git -C parent submodule add ../sub sub &&
 	git -C parent commit -m "add files and submodules" &&
